# Generated by Django 5.2.4 on 2025-08-29 10:36

import django.db.models.deletion
import django.utils.timezone
import farmers.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('farmers', '0002_farmersupportactivity'),
    ]

    operations = [
        migrations.AddField(
            model_name='farmer',
            name='age',
            field=models.PositiveIntegerField(default=18, verbose_name='Age'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='avg_monthly_income',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Average monthly income (RWF)'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='barrier_distance',
            field=models.BooleanField(default=False, verbose_name='Barrier: Distance to school'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='barrier_early_marriage',
            field=models.BooleanField(default=False, verbose_name='Barrier: Early marriage/pregnancy'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='barrier_lack_materials',
            field=models.BooleanField(default=False, verbose_name='Barrier: Lack of materials'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='barrier_other',
            field=models.CharField(blank=True, max_length=100, verbose_name='Barrier: Other'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='barrier_school_fees',
            field=models.BooleanField(default=False, verbose_name='Barrier: School fees'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='chronic_illness_details',
            field=models.CharField(blank=True, max_length=100, verbose_name='Chronic illness/disability details'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='created at'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='education_level',
            field=models.CharField(choices=[('none', 'None'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('tertiary', 'Tertiary')], default='none', max_length=10, verbose_name='Education Level'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='food_shortage',
            field=models.BooleanField(default=False, verbose_name='Faced hunger/food shortage in last 3 months?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='food_shortage_when',
            field=models.CharField(blank=True, max_length=100, verbose_name='If yes, when?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='full_name',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Full Name'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='has_chronic_illness',
            field=models.BooleanField(default=False, verbose_name='Any household member with chronic illness/disability?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='has_loans',
            field=models.BooleanField(default=False, verbose_name='Do you have access to loans/credit?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='has_savings',
            field=models.BooleanField(default=False, verbose_name='Do you have savings?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='has_support',
            field=models.BooleanField(default=False, verbose_name='Support received from government/NGOs?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='health_facility_distance_km',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Health facility distance (km)'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='house_type',
            field=models.CharField(blank=True, choices=[('permanent', 'Permanent'), ('semi', 'Semi-permanent'), ('temporary', 'Temporary')], max_length=12, null=True, verbose_name='Type of house'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='household_id',
            field=models.CharField(blank=True, help_text='16 digit household ID', max_length=16, null=True, unique=True, verbose_name='Household ID'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='income_source_other',
            field=models.CharField(blank=True, max_length=100, verbose_name='Other income source'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='interview_date',
            field=models.DateField(default=farmers.models.today_utc_plus_2, verbose_name='Date of interview'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='interviewer_name',
            field=models.CharField(default='Unknown', max_length=100, verbose_name='Interviewer name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='is_coop_member',
            field=models.BooleanField(default=False, verbose_name='Member of cooperative/association?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='is_savings_group_member',
            field=models.BooleanField(default=False, verbose_name='Member of savings group (IBIMINA)?'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='lighting_other',
            field=models.CharField(blank=True, max_length=100, verbose_name='Other lighting'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='lighting_source',
            field=models.CharField(choices=[('electricity', 'Electricity'), ('solar', 'Solar'), ('kerosene', 'Kerosene'), ('other', 'Other')], default='none', max_length=12, verbose_name='Lighting source'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='main_income_source',
            field=models.CharField(choices=[('farming', 'Farming'), ('livestock', 'Livestock'), ('business', 'Business'), ('employment', 'Employment (formal/informal)'), ('other', 'Other')], default='none', max_length=20, verbose_name='Main source of income'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='main_staple_foods',
            field=models.CharField(blank=True, max_length=100, verbose_name='Main staple foods'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='marital_status',
            field=models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('widowed', 'Widowed'), ('divorced', 'Divorced')], default='single', max_length=10, verbose_name='Marital Status'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='meals_per_day',
            field=models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3')], default=2, verbose_name='Meals eaten per day'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='nearest_health_facility',
            field=models.CharField(blank=True, max_length=100, verbose_name='Nearest health facility'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='num_children_attending_school',
            field=models.PositiveIntegerField(default=0, verbose_name='Number currently attending school'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='num_children_school_age',
            field=models.PositiveIntegerField(default=0, verbose_name='Number of children of school age'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='occupation',
            field=models.CharField(default='None', max_length=100, verbose_name='Occupation/Income Source'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='phone_number',
            field=models.CharField(blank=True, max_length=20, verbose_name='Phone Number'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='roofing',
            field=models.CharField(choices=[('iron', 'Iron sheets'), ('grass', 'Grass'), ('other', 'Other')], default='None', max_length=10, verbose_name='Roofing'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='roofing_other',
            field=models.CharField(blank=True, max_length=100, verbose_name='Other roofing'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='sector_district',
            field=models.CharField(default='None', max_length=100, verbose_name='Sector/District'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='sex',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='None', max_length=1, verbose_name='Sex'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='support_details',
            field=models.CharField(blank=True, max_length=100, verbose_name='Support details'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='toilet_facility',
            field=models.CharField(choices=[('flush', 'Flush'), ('pit', 'Pit latrine'), ('none', 'None')], default='None', max_length=10, verbose_name='Toilet facility'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='updated at'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='village_cell',
            field=models.CharField(default='None', max_length=100, verbose_name='Village/Cell'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='water_source',
            field=models.CharField(choices=[('tap', 'Tap'), ('borehole', 'Borehole'), ('river', 'River'), ('other', 'Other')], default='None', max_length=10, verbose_name='Water source'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='farmer',
            name='water_source_other',
            field=models.CharField(blank=True, max_length=100, verbose_name='Other water source'),
        ),
        migrations.AlterField(
            model_name='farmer',
            name='farm_size',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='farm size (hectares)'),
        ),
        migrations.AlterField(
            model_name='farmer',
            name='joined_date',
            field=models.DateField(blank=True, null=True, verbose_name='joined date'),
        ),
        migrations.CreateModel(
            name='HouseholdAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('land', 'Land'), ('livestock', 'Livestock'), ('house', 'House'), ('other', 'Other')], max_length=20, verbose_name='Asset Type')),
                ('description', models.CharField(blank=True, max_length=100, verbose_name='Description')),
                ('quantity', models.CharField(blank=True, max_length=100, verbose_name='Quantity/Size/Type')),
                ('house_type', models.CharField(blank=True, choices=[('permanent', 'Permanent'), ('semi', 'Semi-permanent'), ('temporary', 'Temporary')], max_length=12, verbose_name='House Type')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='farmers.farmer')),
            ],
        ),
        migrations.CreateModel(
            name='HouseholdMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('relationship', models.CharField(max_length=50, verbose_name='Relationship to Head')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Sex')),
                ('age', models.PositiveIntegerField(default=18, verbose_name='Age')),
                ('education_level', models.CharField(choices=[('none', 'None'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('tertiary', 'Tertiary')], default='none', max_length=10, verbose_name='Education Level')),
                ('school_attendance', models.BooleanField(default=False, verbose_name='School Attendance')),
                ('main_occupation', models.CharField(blank=True, max_length=100, verbose_name='Main Occupation')),
                ('health_condition', models.CharField(blank=True, max_length=100, verbose_name='Health Condition')),
                ('notes', models.CharField(blank=True, max_length=200, verbose_name='Notes')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='household_members', to='farmers.farmer')),
            ],
        ),
    ]
